name: Metacall Benchmarks

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - "v*.*.*"
    branches:
      - master
      - develop
      - benchmark_ci
      
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  benchmark:
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [macos-latest, ubuntu-latest]
          options: [
            {build: debug, sanitizer: without-sanitizer}
          ]
          benchs : [
            metacall-py-call-bench.json, 
            metacall-py-init-bench.json,
            metacall-py-c-api-bench.json,
            metacall-cs-call-bench.json,
            metacall-node-call-bench.json,
            metacall-rb-call-bench.json
            ]
          
    env:
      LTTNG_UST_REGISTER_TIMEOUT: 0
      NUGET_XMLDOC_MODE: skip
      DOTNET_CLI_TELEMETRY_OPTOUT: "true"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Set up the environment
        run: |
          # Extract the OS name from matrix.os
          OS_NAME=$(echo ${{ matrix.os }} | sed 's/-latest$//')
          BENCH_NAME=$(echo ${{ matrix.benchs }} | sed 's/metacall-\(.*\)-bench.json/\1/')
          # Set the OS_NAME environment variable for use in subsequent steps
          echo "OS_NAME=${OS_NAME}" >> $GITHUB_ENV
          echo "BENCH_NAME=${BENCH_NAME}" >> $GITHUB_ENV
          sh ./tools/metacall-environment.sh $METACALL_INSTALL_OPTIONS
        env:
          METACALL_INSTALL_OPTIONS: base python backtrace 

      - name: Configure
        run: |
          mkdir -p build
          cd build
          if [ "$(uname)" == "Darwin" ]; then
            . .env
          fi
          bash ../tools/metacall-configure.sh $METACALL_CONFIGURE_OPTIONS
        env:
          METACALL_CONFIGURE_OPTIONS: ${{ matrix.options.build }} ${{ matrix.options.sanitizer }} scripts ports tests python benchmarks install 

      - name: Build
        working-directory: ./build
        # TODO: Remove the disable option for fork safe once funchook problem is solved
        run: |
          if [ "$(uname)" == "Darwin" ]; then
            . .env
          fi
          cmake -DOPTION_FORK_SAFE=OFF  ..
          bash ../tools/metacall-build.sh $METACALL_BUILD_OPTIONS
        env:
          METACALL_BUILD_OPTIONS: ${{ matrix.options.build }} tests

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
            name: Metacall ${{ env.OS_NAME }}-${{ env.BENCH_NAME }} Benchmark
            tool: 'googlecpp'
            output-file-path: ./build/${{ matrix.benchs }}
            # Access token to deploy GitHub Pages branch
            github-token: ${{ secrets.GITHUB_TOKEN }}
            # Push and deploy GitHub pages branch automatically
            auto-push: true
            # Github Pages branch name
            gh-pages-branch: pages
            # Comment in case of alert
            comment-on-alert: true
            benchmark-data-dir-path: bench/${{ env.OS_NAME }}/${{ env.BENCH_NAME }}
